#include<stdio.h>
#include<math.h>
#include<stdlib.h>
#include<windows.h>
#include<winbase.h>
int fun(int x)
{
	if (x > 1)
		return x + fun(x - 1);
	else
		return x;
}

int main()
{
	int q, menucir, menuerr, debug;
	debug = 0;
	menucir = 2;
	while (menucir == 2)
	{
		menuerr = 1;
		while (menuerr == 1)
		{
			printf("1 to beep program\n");
			printf("2 to pow calculator\n");
			printf("3 to week calculator\n");
			printf("4 to egg\n");
			printf("5 to seat calculator\n");
			printf("6 to android tool box\n");
			printf("7 to cir cal\n");
			printf("PRESS KEY TO CHOOSE FOUCTIONS\n");
			scanf("%d", &q);
			if ((q == 1) || (q == 2) || (q == 3) || (q == 4) || (q == 5) || (q == 6) || (q == 7))
			{
				menuerr = 0;
			}
			if (q == 888)
			{
				if (debug == 1)
				{
					debug = 0;
					printf("DEBUGMODE OFF\n");
				}
				else
				{
					printf("DEBUGMODE ON\n");
					debug = 1;
				}
			}
			if ((q != 5) && (q != 4) && (q != 6) && (q != 3) && (q != 2) && (q != 1) && (q != 888)
				&& (q != 7))
			{
				printf("input error and try again\n");
				system("pause");
			}
		}
		while ((q == 1) || (q == 2) || (q == 6) || (q == 3) || (q == 4) || (q == 7) || (q == 5))
		{
			if (q == 2)
			{
				while (q == 2)
				{
					int y, w, h, c, e, r;
					printf("请输入a的b次方，两个数用空格隔开\n");
					printf("或输入两次999启用文件读取计算\n");
					c = 1;
					w = 0;
					scanf("%d%d", &y, &h);
					if ((y == 999) && (h == 999))
					{
						int so;
						Sleep(1000);
						printf("进入读取分程序\n");
						FILE *mi;
						Sleep(1000);
						printf("成功定义指针\n");
						printf("请输入操作系统类型，windows为0，android为1\n");
						scanf("%d", &so);
						if (so == 0)
						{
							mi = fopen("D:\reader\101.txt", "r");
							Sleep(2000);
							if (mi == NULL)
							{
								printf(" \n");
								printf(" \n");
								printf(" \n");
								printf(" \n");
								printf(" \n");
								printf(" \n");
								printf(" \n");
								printf(" \n");
								Sleep(3000);
								printf("未读取到文件！\n");
								system("pause");
							}
							else
							{
								printf("读取完成\n");
								printf("%c\n", mi);
								Sleep(2000);
								printf("显示完毕\n");
							}
						}
						if (so == 1)
						{
							mi = fopen("\mnt\sdcard\101.txt", "r");
							Sleep(2000);
							if (mi == NULL)
							{
								printf(" \n");
								printf(" \n");
								printf(" \n");
								printf(" \n");
								printf(" \n");
								printf(" \n");
								printf(" \n");
								printf(" \n");
								Sleep(3000);
								printf("未读取到文件！\n");
								system("pause");
							}
							else
							{
								printf("读取完成\n");
								printf("%c\n", mi);
								Sleep(2000);
								printf("显示完毕\n");
							}
						}
						else
						{
							printf("输入错误\n");
							exit;
							exit;
						}
					}
					else
					{
						printf("a=%d,b=%d\n", y, h);
						e = pow(y, h);
						Sleep(2000);
						if ((e > 200000000) || (e < -200000000))
						{
							printf("太大了不想算 \n");
							printf("program is over \n");
							exit;
							exit;
						}
						while (w <= h)
						{
							c = pow(y, w);
							printf("%d的%d次方是%d\n", y, w, c);
							w = w + 1;
						}
						printf("computational completion\n");
						Sleep(2000);
						printf("if you want to end this program ");
						printf("just input “0” \n");
						printf("if you want to try again,please input “1”\n");
						printf("伶仃shrink\n");
						printf("帅到飞起的碳酸根咸鱼\n");
						int endcir;
						endcir = 1;
						while (endcir == 1)
						{
							scanf("%d", &r);
							if (r == 0)
							{
								printf("program is over\n");
								endcir = 2;
								q = 999;
							}
							if (r == 1)
							{
								endcir = 2;
							}
							if ((r != 1) && (r != 0))
							{
								printf("input error");
							}
						}
					}
				}
			}
			if (q == 7)
			{
				printf("递归示例计算程序\n");
				int digui;
				scanf("%d", &digui);
				digui = fun(digui);
				printf("计算结果%d\n", digui);
				system("pause");
				q = 999;
			}
			if (q == 6)
			{
				int toolserr;
				int andtools;
				toolserr = 1;
				while (toolserr == 1)
				{
					printf("\n");
					printf("\n");
					printf("\n");
					printf("\n");
					printf("\n");
					printf("android tools\n");
					printf("1 to busybox\n");
					printf("2 to su\n");
					printf("3 to exit\n");
					scanf("%d", &andtools);
					if (andtools == 1)
					{
						system("busybox");
						toolserr = 0;
					}
					if (andtools == 2)
					{
						system("su");
						toolserr = 0;
					}
					if (andtools == 3)
					{
						q = 999;
						toolserr = 0;
					}
					if (toolserr == 1)
					{
						printf("retry\n");
					}
				}

			}
			if (q == 1)
			{
				while (q == 1)
				{
					printf("发声程序");
					if (debug == 1)
					{
						printf("DEBUGING");
					}
					int bhz, ehz, hztm, scanjump;
					printf("\n\n");
					printf("\n输入起始频率\n");
					scanf("%d", &bhz);
					printf("输入终止频率\n");
					scanf("%d", &ehz);
					printf("输入单频播放时间（毫秒）\n");
					scanf("%d", &hztm);
					printf("输入扫描跨度\n");
					scanf("%d", &scanjump);
					printf("您输入从%dHz到%dHz\n", bhz, ehz);
					printf("单频播放%dms\n", hztm);
					if (scanjump <= 5)
					{
						printf("您输入单频播放时间过短，有可能无法播放\n");
					}
					int addhz, addhzs, addtime;
					addhz = ehz - bhz + 1;
					if (addhz < 0)
					{
						printf("已进行负数归正\n");
						addhzs = 0 - addhz;
					}
					else
					{
						addhzs = addhz;
					}
					addtime = addhzs * hztm;
					addtime = addtime / 1000;
					addtime = addtime / scanjump;
					printf("理想状态共需时间%ds\n", addtime);
					printf("按任意键开始播放\n");
					system("pause");
					while (bhz < ehz)
					{
						printf("正在升调发声%d\n", bhz);
						Beep(bhz, hztm);
						bhz = bhz + scanjump;
					}
					while (ehz < bhz)
					{
						printf("正在降调发声%d\n", bhz);
						Beep(bhz, hztm);
						bhz = bhz - scanjump;
					}
					if (ehz == bhz)
					{
						printf("正在单调发声%d\n", bhz);
						Beep(bhz, hztm);
						bhz = bhz - 1;
					}
					printf
						("运行完毕，输入任意值重启发声程序，结束程序输入0\n");
					int bepover;
					scanf("%d", &bepover);
					if (bepover == 0)
					{
						q = 999;
					}
				}
			}
			if (q == 3)
			{
				if (debug == 1)
				{
					printf("程序主界面q为%d\n", q);
				}
				int j, o, f;
				o = 3;
				while (o == 3)
				{
					printf("please input a number to translate the day\n");
					printf("press 999 to exit\n");
					scanf("%d", &j);
					if (j == 999)
					{
						o = 999;
						q = 999;
						printf("exit to menu successfully\n");
					}
					switch (j)
					{
					case 1:
						printf("MONDAY 星期一\n");
						scanf("%d", &f);
						break;
					case 2:
						printf("TUESDAY 星期二\n");
						scanf("%d", &f);
						break;
					case 3:
						printf("WEDNESDAY 星期三\n");
						scanf("%d", &f);
						break;
					case 4:
						printf("THURSDAY 星期四\n");
						scanf("%d", &f);
						break;
					case 5:
						printf("FRIDAY 星期五\n");
						scanf("%d", &f);
						break;
					case 6:
						printf("SATURDAY 星期六\n");
						scanf("%d", &f);
						break;
					case 7:
						printf("SUNDAY 星期日\n");
						scanf("%d", &f);
						break;
					}
				}
			}
			if (q == 4)
			{
				if (debug == 1)
				{
					printf("程序主界面q为%d\n", q);
				}
				int y, w, k;
				w = 0;
				printf("你看这个面他又长又宽\n");
				scanf("%s%d", &y, &k);
				while (w < k)
				{
					printf("%d\n", &y);
					printf("%x\n", &y);
					printf("%f\n", &y);
					w = w + 1;
				}
				printf("computational completion\n");
				w = 1;
				while (w < k)
				{
					printf("%s,too\n", &y);
					w = w + 1;
				}
				printf("就像这个碗他又大又圆\n");
				printf("帅到飞起的碳酸根咸鱼\n");
				printf("input 0 to exit\n");
				int playexit;
				scanf("%d", &playexit);
				if (playexit == 0)
				{
					q = 999;
				}
			}
			if (q == 5)
			{
				if (debug == 1)
				{
					printf("程序初始主界面q为%d\n", q);
				}
				int cir;
				int a, b, c, n, t, x, tongxlc, tongwhe, aimx, aimy, aimtime, err, h, namecho,
					seatcir, i;
				cir = 1;
				seatcir = 1;
				while (seatcir == 1)
				{
					while (cir == 1)
					{
						err = 1;
						while (err == 1)
						{
							if (debug == 1)
							{
								printf("程序主界面q为%d，cir为%d\n", q, cir);
							}

							printf("请输入当前横排纵列数\n");
							scanf("%d%d", &h, &i);
							a = h;
							b = i;
							printf("请输入时间跨度，单位:周\n");
							scanf("%d", &c);
							t = 0;
							q = 0;
							printf("请输入您当前周数\n");
							scanf("%d", &n);
							if ((a <= 4) && (b <= 6))
							{
								err = 0;
							}
							else
							{
								printf("输入错误\n");
							}
						}
						tongxlc = n + 2;
						while (tongxlc > 4)
						{
							tongxlc = tongxlc - 4;
						}
						if (a == tongxlc)
						{
							tongwhe = 1;
						}
						if ((b == 4) && (a == tongxlc))
						{
							a = a + c;
							while (a > 4)
							{
								a = a - 4;
							}
							printf("您的座位编码是(%d，4)\n", a);
						}
						else
						{
							q = 1;
							while (q <= c)
							{
								b = b + a;
								a = a + 1;
								q = q + 1;
								while (b > 6)
								{
									b = b - 6;
								}
								while (a > 4)
								{
									a = a - 4;
								}
								if (tongwhe == 1)
								{
									while (b == 4)
									{
										b = b + 1;
									}
								}
							}
							printf("您的座位编码为(%d，%d)\n", a, b);
						}
						system("pause");
						printf
							("重新计算输入1，结束程序请输入0，继续计算座位请输入任意值\n");
						scanf("%d", &cir);
					}
					if (cir == 0)
					{
						printf("程序已终止\n");
						if (debug == 1)
						{
							printf("未退出时q为%d，cir为%d\n", q, cir);
						}
						q = 999;
						cir = 999;
						q = 999;
						seatcir = 999;
						if (debug == 1)
						{
							printf("退出时q为%d，cir为%d\n", q, cir);
						}

					}
					else
					{
						int targeterr;
						targeterr = 1;
						while (targeterr == 1)
						{
							printf("请输入期望横排纵列数\n");
							scanf("%d%d", &aimx, &aimy);
							printf("请输入期望时间段，单位:周\n");
							scanf("%d", &aimtime);
							if ((aimx <= 4) && (aimy <= 6))
							{
								targeterr = 0;
							}
							else
							{
								printf("输入错误\n");
							}
						}
						int sss, ungetrtn;
						sss = 0;
						ungetrtn = 0;
						a = h;
						b = i;
						if ((tongwhe == 1) && (b == 4))
						{
							while (sss < aimtime)
							{
								a = a + 1;
								while (a > 4)
								{
									a = a - 4;
								}
								if ((a == aimx) && (b == aimy))
								{
									printf("%d周后可达目标位置\n", sss + 1);
									ungetrtn = 1;
								}
								sss = sss + 1;
							}
						}
						else
						{
							ungetrtn = 0;
							while (sss < aimtime)
							{
								b = b + a;
								a = a + 1;
								while (b > 6)
								{
									b = b - 6;
								}
								while (a > 4)
								{
									a = a - 4;
								}
								while (b == 4)
								{
									b = b + 1;
								}
								if ((a == aimx) && (b == aimy))
								{
									printf("%d周后可达目标位置\n", sss + 1);
									ungetrtn = 1;
								}
								sss = sss + 1;
							}
						}
						if (ungetrtn == 0)
						{
							printf("在所指定范围内没有机会坐到该座位\n");
						}
						printf("按任意键进行座位推算plus\n");
						system("pause");
						namecho = 1;
					}
					if (namecho == 1)
					{
						int aax, aay, abx, aby, acx, acy, adx, ady;
						int aex, aey, afx, afy;
						int bax, bay, bbx, bby, bcx, bcy, bdx, bdy;
						int bex, bey, bfx, bfy;
						int cax, cay, cbx, cby, ccx, ccy, cdx, cdy;
						int cex, cey, cfx, cfy;
						int dax, day, dbx, dby, dcx, dcy, ddx, ddy;
						int dex, dey, dfx, dfy;
						aax = 1;
						abx = 1;
						acx = 1;
						adx = 1;
						aex = 1;
						afx = 1;
						bax = 2;
						bbx = 2;
						bcx = 2;
						bdx = 2;
						bex = 2;
						bfx = 2;
						cax = 3;
						cbx = 3;
						ccx = 3;
						cdx = 3;
						cfx = 3;
						cex = 3;
						dax = dbx = dcx = ddx = dex = dfx = 4;
						aay = bay = cay = day = 1;
						aby = bby = cby = dby = 2;
						acy = bcy = ccy = dcy = 3;
						ady = bdy = cdy = ddy = 4;
						aey = bey = cey = dey = 5;
						afy = bfy = cfy = dfy = 6;
						int fqu = 0;
						int chax;
						chax = c + n - 3;
						while (fqu <= chax)
						{
							ady = 4;
							aay = aay + aax;
							aby = aby + abx;
							acy = acy + acx;
							ady = ady + adx;
							aey = aey + aex;
							afy = afy + afx;
							bay = bay + bax;
							bby = bby + bbx;
							bcy = bcy + bcx;
							bdy = bdy + bdx;
							bfy = bfy + bfx;
							bey = bey + bex;
							cay = cay + cax;
							cby = cby + cbx;
							ccy = ccy + ccx;
							cdy = cdy + cdx;
							cey = cey + cex;
							cfy = cfy + cfx;
							day = day + dax;
							dby = dby + dbx;
							dcy = dcy + dcx;
							ddy = ddy + ddx;
							dey = dey + dex;
							dfy = dfy + dfx;
						}
						printf("作者编写中，抱歉\n");
						namecho = 5;
						cir = 1;
						system("pause");
					}
				}
			}
		}
	}
}

